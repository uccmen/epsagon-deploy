service: epsagon-deploy
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# Add the serverless-webpack plugin
plugins:
  - serverless-plugin-epsagon
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs12.x
  region: ${opt:region, env:AWS_REGION, env:AWS_DEFAULT_REGION}
  stage: ${opt:stage, 'development'}
  stackTags:
    Business: "green"
    Environment: ${self:custom.environment}
    Product: "epsagon-deploy-demo"
    Team: "tools-cc"
  versionFunctions: false
  logs:
    restApi: true
  logRetentionInDays: 90
  tracing:
    apiGateway: true
    lambda: true

custom:
  environment: ${opt:environment, 'development'}
  epsagon:
    token: ${opt:epsagonToken}
    appName: ${self:service}-${self:provider.stage}
    disable: true
    metadataOnly: false
  webpack:
    webpackConfig: 'webpack.config.ts'
    packager: 'yarn'
  queryStringJWTAuthorizer:
    name: queryStringJWTAuthorizer
    resultTtlInSeconds: 0
    identitySource: method.request.querystring.jwt
    type: request

functions:
  hello0:
    handler: handler.hello
    epsagon:
      disable: true
    events:
      - http:
          method: get
          path: hello0
          cors: true
          authorizer: ${self:custom.queryStringJWTAuthorizer}
  hello1:
    handler: handler.hello
    epsagon:
      disable: true
    events:
      - http:
          method: get
          path: hello1
          cors: true
          authorizer: ${self:custom.queryStringJWTAuthorizer}
  hello2:
    handler: handler.hello
    events:
      - http:
          method: get
          path: hello2
          cors: true
          authorizer: ${self:custom.queryStringJWTAuthorizer}
  hello3:
    handler: handler.hello
    events:
      - http:
          method: get
          path: hello3
          cors: true
          authorizer: ${self:custom.queryStringJWTAuthorizer}
  hello4:
    handler: handler.hello
    events:
      - http:
          method: get
          path: hello4
          cors: true
          authorizer: ${self:custom.queryStringJWTAuthorizer}
  hello5:
    handler: handler.hello
    events:
      - http:
          method: get
          path: hello5
          cors: true
          authorizer: ${self:custom.queryStringJWTAuthorizer}
  hello6:
    handler: handler.hello
    events:
      - http:
          method: get
          path: hello6
          cors: true
          authorizer: ${self:custom.queryStringJWTAuthorizer}
  hello7:
    handler: handler.hello
    events:
      - http:
          method: get
          path: hello7
          cors: true
          authorizer: ${self:custom.queryStringJWTAuthorizer}
  hello8:
    handler: handler.hello
    events:
      - http:
          method: get
          path: hello8
          cors: true
          authorizer: ${self:custom.queryStringJWTAuthorizer}
  hello9:
    handler: handler.hello
    events:
      - http:
          method: get
          path: hello9
          cors: true
          authorizer: ${self:custom.queryStringJWTAuthorizer}
  hello10:
    handler: handler.hello
    events:
      - http:
          method: get
          path: hello10
          cors: true
          authorizer: ${self:custom.queryStringJWTAuthorizer}
  hello11:
    handler: handler.hello
    events:
      - http:
          method: get
          path: hello11
          cors: true
          authorizer: ${self:custom.queryStringJWTAuthorizer}
  hello12:
    handler: handler.hello
    events:
      - http:
          method: get
          path: hello12
          cors: true
          authorizer: ${self:custom.queryStringJWTAuthorizer}
  hello13:
    handler: handler.hello
    events:
      - http:
          method: get
          path: hello13
          cors: true
          authorizer: ${self:custom.queryStringJWTAuthorizer}
  hello14:
    handler: handler.hello
    events:
      - http:
          method: get
          path: hello14
          cors: true
          authorizer: ${self:custom.queryStringJWTAuthorizer}
  hello15:
    handler: handler.hello
    events:
      - http:
          method: get
          path: hello15
          cors: true
          authorizer: ${self:custom.queryStringJWTAuthorizer}
  hello16:
    handler: handler.hello
    events:
      - http:
          method: get
          path: hello16
          cors: true
          authorizer: ${self:custom.queryStringJWTAuthorizer}
  getTemplateAdfHandler:
    handler: handler.getTemplateAdf
    events:
      - http:
          method: get
          path: template
          cors: true
          authorizer: ${self:custom.queryStringJWTAuthorizer}
  queryStringJWTAuthorizer:
    handler: handler.authorizer
